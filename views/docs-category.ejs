<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <link rel="stylesheet" href="/css/style.css">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
</head>
<body>
    <nav class="navbar">
        <div class="nav-container">
            <div class="nav-brand">
                <i class="fas fa-arrow-right"></i>
                <span>Arrow API</span>
            </div>
            <div class="nav-links">
                <a href="/" class="nav-link">Home</a>
                <a href="/docs" class="nav-link">Documentation</a>
                <% if (typeof user !== 'undefined' && user) { %>
                    <a href="/dashboard" class="nav-link">Dashboard</a>
                    <a href="/verify" class="nav-link">Verify</a>
                    <div class="user-menu">
                        <img src="https://cdn.discordapp.com/avatars/<%= user.discordId %>/<%= user.avatar %>.png" alt="Avatar" class="user-avatar">
                        <span class="username"><%= user.username %></span>
                        <a href="/auth/logout" class="logout-btn">
                            <i class="fas fa-sign-out-alt"></i>
                        </a>
                    </div>
                <% } else { %>
                    <a href="/login" class="login-btn">
                        <i class="fab fa-discord"></i>
                        Login with Discord
                    </a>
                <% } %>
                
                <!-- Language Switcher -->
                <div class="language-switcher">
                    <div class="language-dropdown" onclick="toggleLanguageMenu()">
                        <i class="fas fa-globe"></i>
                        <span id="current-language">English</span>
                        <i class="fas fa-chevron-down"></i>
                    </div>
                    <div class="language-menu" id="language-menu">
                        <a href="#" class="language-option" onclick="setLanguage('en')">English</a>
                        <a href="#" class="language-option" onclick="setLanguage('es')">Español</a>
                        <a href="#" class="language-option" onclick="setLanguage('fr')">Français</a>
                        <a href="#" class="language-option" onclick="setLanguage('de')">Deutsch</a>
                        <a href="#" class="language-option" onclick="setLanguage('ja')">日本語</a>
                        <a href="#" class="language-option" onclick="setLanguage('zh')">中文</a>
                    </div>
                </div>
            </div>
        </div>
    </nav>

    <main class="main-content">
        <div class="docs-container">
            <div class="docs-sidebar">
                <nav class="docs-nav">
                    <ul>
                        <li>
                            <a href="/docs">Getting Started</a>
                        </li>
                        <li class="dropdown active">
                            <a href="#" class="dropdown-toggle" onclick="toggleDropdown(this)">ROBLOX APIs</a>
                            <ul class="dropdown-menu">
                                <li><a href="/docs/roblox/user-profile" class="<%= categoryKey === 'user-profile' ? 'active' : '' %>">User Profile</a></li>
                                <li><a href="/docs/roblox/user-games" class="<%= categoryKey === 'user-games' ? 'active' : '' %>">User Games</a></li>
                                <li><a href="/docs/roblox/group-membership" class="<%= categoryKey === 'group-membership' ? 'active' : '' %>">Group Membership</a></li>
                                <li><a href="/docs/roblox/group-extended" class="<%= categoryKey === 'group-extended' ? 'active' : '' %>">Group Extended</a></li>
                                <li class="dropdown">
                                    <a href="#" class="dropdown-toggle" onclick="toggleDropdown(this)">Social APIs</a>
                                    <ul class="dropdown-menu">
                                        <li><a href="/docs/roblox/social/friends" class="<%= categoryKey === 'social-friends' ? 'active' : '' %>">Friends</a></li>
                                        <li><a href="/docs/roblox/social/followers" class="<%= categoryKey === 'social-followers' ? 'active' : '' %>">Followers</a></li>
                                        <li><a href="/docs/roblox/social/presence" class="<%= categoryKey === 'social-presence' ? 'active' : '' %>">Presence</a></li>
                                    </ul>
                                </li>
                                <li><a href="/docs/roblox/assets" class="<%= categoryKey === 'assets' ? 'active' : '' %>">Asset & Catalog</a></li>
                            </ul>
                        </li>
                        <li><a href="/docs/examples">Code Examples</a></li>
                        <li><a href="/docs/responses">Response Format</a></li>
                        <li><a href="/docs/rate-limits">Rate Limits</a></li>
                        <li><a href="/health">Health Check</a></li>
                    </ul>
                </nav>
            </div>

            <div class="docs-content">
                <h1><%= category.title %></h1>
                <p><%= category.description %></p>

                <% category.endpoints.forEach((endpoint, index) => { %>
                <div class="endpoint-card">
                    <div class="endpoint-header">
                        <span class="method <%= endpoint.method.toLowerCase() %>"><%= endpoint.method %></span>
                        <span class="endpoint-url"><%= endpoint.path %></span>
                    </div>
                    
                    <h4>Description</h4>
                    <p><%= endpoint.description %></p>

                    <% if (endpoint.params && endpoint.params.length > 0) { %>
                    <h4>URL Parameters</h4>
                    <table class="params-table">
                        <thead>
                            <tr>
                                <th>Parameter</th>
                                <th>Type</th>
                                <th>Description</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% endpoint.params.forEach(param => { %>
                            <tr>
                                <td><code><%= param.name %></code></td>
                                <td><%= param.type %></td>
                                <td><%= param.description %></td>
                            </tr>
                            <% }); %>
                        </tbody>
                    </table>
                    <% } %>

                    <% if (endpoint.queryParams && endpoint.queryParams.length > 0) { %>
                    <h4>Query Parameters</h4>
                    <table class="params-table">
                        <thead>
                            <tr>
                                <th>Parameter</th>
                                <th>Type</th>
                                <th>Default</th>
                                <th>Description</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% endpoint.queryParams.forEach(param => { %>
                            <tr>
                                <td><code><%= param.name %></code></td>
                                <td><%= param.type %></td>
                                <td><%= param.default || '-' %></td>
                                <td><%= param.description %></td>
                            </tr>
                            <% }); %>
                        </tbody>
                    </table>
                    <% } %>

                    <div class="language-tabs">
                        <button class="tab-button active" onclick="showLanguageTab('endpoint-<%= index %>', 'curl')">cURL</button>
                        <button class="tab-button" onclick="showLanguageTab('endpoint-<%= index %>', 'python')">Python</button>
                        <button class="tab-button" onclick="showLanguageTab('endpoint-<%= index %>', 'javascript')">JavaScript</button>
                        <button class="tab-button" onclick="showLanguageTab('endpoint-<%= index %>', 'nodejs')">Node.js</button>
                        <button class="tab-button" onclick="showLanguageTab('endpoint-<%= index %>', 'go')">Go</button>
                        <button class="tab-button" onclick="showLanguageTab('endpoint-<%= index %>', 'ruby')">Ruby</button>
                        <button class="tab-button" onclick="showLanguageTab('endpoint-<%= index %>', 'rust')">Rust</button>
                    </div>

                    <div id="endpoint-<%= index %>-curl" class="tab-content active">
                        <div class="code-block">
                            <pre><code>curl -X <%= endpoint.method %> "https://arrow-api.up.railway.app<%= endpoint.path.replace(/{(\w+)}/g, '1') %>" \
  -H "api-key: your-api-key-here"</code></pre>
                        </div>
                    </div>

                    <div id="endpoint-<%= index %>-python" class="tab-content">
                        <div class="code-block">
                            <pre><code>import requests

url = "https://arrow-api.up.railway.app<%= endpoint.path.replace(/{(\w+)}/g, '1') %>"
headers = {"api-key": "your-api-key-here"}

response = requests.get(url, headers=headers)
data = response.json()

if response.status_code == 200:
    print("Success:", data)
else:
    print("Error:", data.get('error', 'Unknown error'))</code></pre>
                        </div>
                    </div>

                    <div id="endpoint-<%= index %>-javascript" class="tab-content">
                        <div class="code-block">
                            <pre><code>const fetchData = async () => {
  try {
    const response = await fetch('https://arrow-api.up.railway.app<%= endpoint.path.replace(/{(\w+)}/g, '1') %>', {
      headers: { 'api-key': 'your-api-key-here' }
    });
    
    const data = await response.json();
    
    if (response.ok) {
      console.log('Success:', data);
      return data;
    } else {
      console.error('Error:', data.error);
    }
  } catch (error) {
    console.error('Request failed:', error);
  }
};

fetchData();</code></pre>
                        </div>
                    </div>

                    <div id="endpoint-<%= index %>-nodejs" class="tab-content">
                        <div class="code-block">
                            <pre><code>const https = require('https');

const options = {
  hostname: 'arrow-api.up.railway.app',
  path: '<%= endpoint.path.replace(/{(\w+)}/g, '1') %>',
  method: '<%= endpoint.method %>',
  headers: { 'api-key': 'your-api-key-here' }
};

const req = https.request(options, (res) => {
  let data = '';
  res.on('data', (chunk) => data += chunk);
  res.on('end', () => {
    const result = JSON.parse(data);
    console.log('Response:', result);
  });
});

req.on('error', (error) => console.error('Request failed:', error));
req.end();</code></pre>
                        </div>
                    </div>

                    <div id="endpoint-<%= index %>-go" class="tab-content">
                        <div class="code-block">
                            <pre><code>package main

import (
    "encoding/json"
    "fmt"
    "io"
    "net/http"
)

func main() {
    url := "https://arrow-api.up.railway.app<%= endpoint.path.replace(/{(\w+)}/g, '1') %>"
    
    req, _ := http.NewRequest("<%= endpoint.method %>", url, nil)
    req.Header.Set("api-key", "your-api-key-here")
    
    client := &http.Client{}
    resp, err := client.Do(req)
    if err != nil {
        fmt.Printf("Error: %v\n", err)
        return
    }
    defer resp.Body.Close()
    
    body, _ := io.ReadAll(resp.Body)
    var result map[string]interface{}
    json.Unmarshal(body, &result)
    
    fmt.Printf("Response: %+v\n", result)
}</code></pre>
                        </div>
                    </div>

                    <div id="endpoint-<%= index %>-ruby" class="tab-content">
                        <div class="code-block">
                            <pre><code>require 'net/http'
require 'json'
require 'uri'

uri = URI('https://arrow-api.up.railway.app<%= endpoint.path.replace(/{(\w+)}/g, '1') %>')

http = Net::HTTP.new(uri.host, uri.port)
http.use_ssl = true

request = Net::HTTP::<%= endpoint.method.charAt(0).toUpperCase() + endpoint.method.slice(1).toLowerCase() %>.new(uri)
request['api-key'] = 'your-api-key-here'

response = http.request(request)
data = JSON.parse(response.body)

if response.code == '200'
  puts "Success: #{data}"
else
  puts "Error: #{data['error']}"
end</code></pre>
                        </div>
                    </div>

                    <div id="endpoint-<%= index %>-rust" class="tab-content">
                        <div class="code-block">
                            <pre><code>use reqwest;
use serde_json::Value;

#[tokio::main]
async fn main() -> Result<(), Box<dyn std::error::Error>> {
    let url = "https://arrow-api.up.railway.app<%= endpoint.path.replace(/{(\w+)}/g, '1') %>";
    
    let client = reqwest::Client::new();
    let response = client
        .<%= endpoint.method.toLowerCase() %>(url)
        .header("api-key", "your-api-key-here")
        .send()
        .await?;
    
    if response.status().is_success() {
        let data: Value = response.json().await?;
        println!("Success: {}", data);
    } else {
        println!("Error: {}", response.status());
    }
    
    Ok(())
}</code></pre>
                        </div>
                    </div>

                    <% if (endpoint.response) { %>
                    <h4>Response Example</h4>
                    <div class="code-block">
                        <pre><code><%= JSON.stringify(endpoint.response, null, 2) %></code></pre>
                    </div>
                    <% } %>

                    <% if (endpoint.note) { %>
                    <p><strong>Note:</strong> <%= endpoint.note %></p>
                    <% } %>
                </div>
                <% }); %>
            </div>
        </div>
    </main>

    <footer class="footer">
        <div class="footer-container">
            <div class="footer-section">
                <h4>Arrow API</h4>
                <p>Powerful Roblox group membership API</p>
            </div>
            <div class="footer-section">
                <h4>Links</h4>
                <a href="/docs">Documentation</a>
                <a href="/docs/auth">Authentication</a>
                <a href="https://github.com" target="_blank">GitHub</a>
            </div>
            <div class="footer-section">
                <h4>Support</h4>
                <a href="https://discord.gg" target="_blank">Discord Server</a>
                <a href="mailto:support@arrowapi.com">Contact</a>
            </div>
        </div>
        <div class="footer-bottom">
            <p>&copy; 2024 Arrow API. All rights reserved.</p>
        </div>
    </footer>

    <script src="/js/main.js"></script>
</body>
</html>
